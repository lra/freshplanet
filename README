This is a minesweeper game I'm coding using Symfony and PHP.

Time spent for now:

 * Symfony installation: 1 hour
 * Initial game design: 1 hour
 * Yaml schema design: 2 hours
 * Symfony understanding and application building: 5 hours
 * Basic authentification system: 2 hours

Suppositions:

 * There can be 1 million users and 1 billion hiscores for a start
 * A user can only play one game at a time
 * A minesweeper game board is squared
 * Maximum game time to resolve a board is 1 day

Rules:

 * A player loose when he clicks a mined square
 * A player wins when he uncover the last empty square

Constants:

 * Minimum width of a board: 10
 * Maximum width of a board: 100
 * Percentage of mines: 10

Data structures:

 * Users
 	 * id (PK)
 	 * Email (VARCHAR(255) NOT NULL)
	 * Firstname (VARCHAR(255) NOT NULL)
	 * Lastname (VARCHAR(255) NOT NULL)
	 * created_at (DATETIME NOT NULL)
	 * updated_at (DATETIME NOT NULL)
	 * Current game (BLOB)
	 	 * BLOB board consisting of squares of 3 bits each
		 	 * 1st bit: SQUARE_MINED (1) or SQUARE_EMPTY (0)
			 * 2nd and 3rd bit
			 	 * USER_NONE (00)
				 * USER_FLAGGED (01)
				 * USER_QUESTION (10)
				 * USER_REVEALED (11)
	 * Current game time in seconds (INT)
	 * Last action time (DATETIME)

 * Hiscores
 	 * id (PK)
 	 * user_id (FK Users.id)
	 * Time (Time spent in seconds to win the game)
	 * Boardwidth (width of the board played and won)
	 * created_at (when the hiscore occured) (DATETIME NOT NULL)

Indexes:

 * On User.Email: needed to look for a specific user at login
 * On User.created_at: needed to list the latest users
 * On Hiscores.user_id: used for the join between Users and Hiscores
 * On Hiscores.boardwidth and Hiscores.time: used to get the hiscores with the same board size from best to worst
 * On Hiscores.created_at: used to get the latest hiscores

Choices:

 * As a user can only play 1 game at a time, I chose to not make a separate table for the user's game board in order to save the JOIN cost between the User table and the supposed game table

Application/modules/actions:

 * frontend
   * user
   * game
   * hiscore
 * json
 * backend
   * admin
